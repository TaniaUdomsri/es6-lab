{"version":3,"sources":["main.es6.js"],"names":[],"mappings":"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","file":"main.es5.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n// Initializes the Sticky Notes app.\nclass StickyNotesApp {\n  constructor() {\n    // Shortcuts to DOM Elements.\n    this.notesContainer = document.getElementById('notes-container');\n    this.noteMessageInput = document.getElementById('message');\n    this.addNoteButton = document.getElementById('save');\n    this.notesSectionTitle = document.getElementById('notes-section-title');\n\n    // Saves notes on button click.\n    this.addNoteButton.addEventListener('click', () => this.saveNote());\n\n    // Toggle for the button.\n    this.noteMessageInput.addEventListener('keyup', () => this.toggleButton());\n\n    // Loads all the notes.\n    for (let key in localStorage) {\n      this.displayNote(key, localStorage[key]);\n    }\n\n    // Listen for updates to notes from other windows.\n    window.addEventListener('storage', e => this.displayNote(e.key, e.newValue));\n  }\n\n  // Saves a new sticky note on localStorage.\n  saveNote() {\n    if (this.noteMessageInput.value) {\n      let key = Date.now().toString();\n      localStorage.setItem(key, this.noteMessageInput.value);\n      this.displayNote(key, this.noteMessageInput.value);\n      StickyNotesApp.resetMaterialTextfield(this.noteMessageInput);\n      this.toggleButton();\n    }\n  }\n\n  // Resets the given MaterialTextField.\n  static resetMaterialTextfield(element) {\n    element.value = '';\n    element.parentNode.MaterialTextfield.boundUpdateClassesHandler();\n    element.blur();\n  }\n\n  // Creates/updates/deletes a note in the UI.\n  displayNote(key, message) {\n    let note = document.getElementById(key);\n    // If no element with the given key exists we create a new note.\n    if (!note) {\n      note = document.createElement('sticky-note');\n      note.id = key;\n      this.notesContainer.insertBefore(note, this.notesSectionTitle.nextSibling);\n    }\n    // If the message is null we delete the note.\n    if (!message) {\n      return note.deleteNote();\n    }\n    note.setMessage(message);\n  }\n\n  // Enables or disables the submit button depending on the values of the input field.\n  toggleButton() {\n    if (this.noteMessageInput.value) {\n      this.addNoteButton.removeAttribute('disabled');\n    } else {\n      this.addNoteButton.setAttribute('disabled', 'true');\n    }\n  }\n}\n\n// On load start the app.\nwindow.addEventListener('load', () => new StickyNotesApp());\n\n// A Sticky Note custom element that extends HTMLElement.\nclass StickyNote extends HTMLElement {\n\n  // Fires when an instance of the element is created.\n  createdCallback() {\n    this.classList.add(...StickyNote.CLASSES);\n    this.innerHTML = StickyNote.TEMPLATE;\n    this.messageElement = this.querySelector('.message');\n    this.dateElement = this.querySelector('.date');\n    this.deleteButton = this.querySelector('.delete');\n    this.deleteButton.addEventListener('click', () => this.deleteNote());\n  };\n\n  // Fires when an attribute of the element is added/deleted/modified.\n  attributeChangedCallback(attributeName) {\n    // We display/update the created date message if the id changes.\n    let date;\n    if (attributeName == 'id') {\n      // Format the date\n      let dateFormatterOptions = {day: 'numeric', month: 'short'};\n      let shortDate = new Intl.DateTimeFormat(\"en-us\", dateFormatterOptions).format(date);\n      this.dateElement.textContent = `Created on ${shortDate}`;\n    }\n  };\n\n  // Sets the message of the note.\n  setMessage(message) {\n    this.messageElement.textContent = message;\n    // Replace all line breaks by <br>.\n    this.messageElement.innerHTML = this.messageElement.innerHTML.replace(/\\n/g, '<br>');\n  };\n\n  // Deletes the note by removing the element from the DOM and the data from localStorage.\n  deleteNote() {\n    localStorage.removeItem(this.id);\n    this.parentNode.removeChild(this);\n  };\n\n}\n\n// Initial content of the element.\nStickyNote.TEMPLATE = `\n  <div class=\"message\"></div>\n  <div class=\"date\"></div>\n  <button class=\"delete mdl-button mdl-js-button mdl-js-ripple-effect\">\n    Delete'\n  </button>`;\n\n// StickyNote elements top level style classes.\nStickyNote.CLASSES = ['mdl-cell--4-col-desktop', 'mdl-card__supporting-text', 'mdl-cell--12-col',\n  'mdl-shadow--2dp', 'mdl-cell--4-col-tablet', 'mdl-card', 'mdl-cell', 'sticky-note'];\n\ndocument.registerElement('sticky-note', StickyNote);\n\n"]}